<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.octacomm.sample.dao.mapper.EmailLogMapper">

	<sql id="condition">
        <where>
        	<if test="param.searchField != null and param.searchField != '' and param.searchWord != null and param.searchWord != ''">
       		and ${param.searchField} like '%${param.searchWord}%'
       		</if>
      		<if test="param.pIdx != null and param.pIdx != '' and param.pIdx != null and param.pIdx != ''">
       		and tb_storeage.pIdx = #{param.pIdx}
       		</if>
       </where>
	</sql>

    <select id="getCountByParam" resultType="_int">
        SELECT COUNT(*) FROM tb_email_log
        join tb_storeage on tb_email_log.storeageName = tb_storeage.modelName
    	<include refid="condition"/>
    </select>
   
    <select id="getListByParam" resultType="Email">
    	SELECT tb_email_log.*, tb_storeage.pIdx FROM tb_email_log
    	join tb_storeage on tb_email_log.storeageName = tb_storeage.modelName
    	<include refid="condition"/>
    	ORDER BY tb_email_log.id DESC
        LIMIT #{pageSize} OFFSET #{startRow}
    </select>   
    
    <insert id="insert" parameterType="net.octacomm.sample.domain.Email" useGeneratedKeys="true"  keyProperty="id" >
		INSERT INTO tb_email_log ( id, status, eventName, storeageName, uId, ip, dateTime, mailFrom, mailDate, body ) VALUES ( null, #{status}, #{eventName}, #{storeageName}, #{uId}, #{ip}, #{dateTime}, #{mailFrom}, #{mailDate}, #{body} )
		<selectKey keyProperty="id" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
    


</mapper>